// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/11/2020 16:01:29"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          CPU
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module CPU_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk50M;
reg [15:0] inputs;
reg nhalt;
reg reset;
// wires                                               
wire [6:0] cent_milhar7;
wire [6:0] centena7;
wire [6:0] dez_milhar7;
wire [6:0] dezena7;
wire [6:0] dezena7pc;
wire inputInst;
wire neg;
wire outputInst;
wire [6:0] und_milhar7;
wire [6:0] unidade7;
wire [6:0] unidade7pc;

// assign statements (if any)                          
CPU i1 (
// port map - connection between master ports and signals/registers   
	.cent_milhar7(cent_milhar7),
	.centena7(centena7),
	.clk50M(clk50M),
	.dez_milhar7(dez_milhar7),
	.dezena7(dezena7),
	.dezena7pc(dezena7pc),
	.inputInst(inputInst),
	.inputs(inputs),
	.neg(neg),
	.nhalt(nhalt),
	.outputInst(outputInst),
	.reset(reset),
	.und_milhar7(und_milhar7),
	.unidade7(unidade7),
	.unidade7pc(unidade7pc)
);
initial 
begin 
#1000000 $finish;
end 

// clk50M
always
begin
	clk50M = 1'b0;
	clk50M = #5000 1'b1;
	#5000;
end 
endmodule

